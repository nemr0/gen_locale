
import 'package:code_builder/code_builder.dart';
import 'package:dart_style/dart_style.dart';


class GenerateEnumFromMap {
  final DartEmitter emitter = DartEmitter();
  Set<String> keys = {};
  void addKey(String value) => keys.add(value);

  String generateEnum() {
    if (keys.length == 1) assert(keys.first.isNotEmpty, 'Key cannot be empty');

    final enumClass = Enum((builder) => builder
      ..name = 'Keys'
      ..values.addAll(keys.isEmpty?[EnumValue((builder)=>builder..docs.add('/// no enums generated')..name='example')]:keys.map((e) => EnumValue((builder) => builder..name = e)))
      ..docs.add('/// This is all keys of json generated by Localization_text_generator'));
    final extension = Extension((builder) => builder
      ..name = 'JsonStringMapper'
      ..methods.add(Method((builder) => builder
        ..name = 'get'
        ..lambda = true
        ..body = Code('''
    // Add your desired localization package implementation
    ''')))
      ..on = Reference('Keys'));
    return DartFormatter().format('''
      // ignore_for_file: constant_identifier_names
    ${extension.accept(emitter)}
    ${enumClass.accept(emitter)}''');
  }




}

