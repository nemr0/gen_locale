import 'package:code_builder/code_builder.dart';
import 'package:dart_style/dart_style.dart';

class GenerateEnumFromKeys {
  GenerateEnumFromKeys({required this.keys});

  final DartEmitter emitter = DartEmitter();
  final Set<String> keys;

  String generateEnum() {
    final enumClass = Enum((builder) => builder
      ..name = 'Keys'
      ..values.addAll(keys.isEmpty
          ? [
              EnumValue((builder) => builder
                ..docs.add('/// no enums generated')
                ..name = 'example')
            ]
          : keys.map((e) => EnumValue((builder) => builder..name = e)))
      ..docs.add('/// This is all keys of json generated by gen_locale'));
    final extension = Extension((builder) => builder
      ..name = 'JsonStringMapper'
      ..methods.add(Method((builder) => builder
        ..name = 'get'
        ..optionalParameters.addAll({
          Parameter((builder) => builder
            ..name = 'context'
            ..type = Reference('BuildContext?', 'package:flutter/widgets.dart')),
          Parameter((builder) => builder
            ..name = 'args'
            ..type = Reference('List<dynamic>?')),
        })
        ..body = Code('''
    // Add your desired localization package implementation
    // you get access to name which is key itself.
    return name;
    ''')))
      ..on = Reference('Keys'));

    return DartFormatter().format('''
    import 'package:flutter/widgets.dart';
      // ignore_for_file: constant_identifier_names
    ${extension.accept(emitter)}
     
  
    ${enumClass.accept(emitter)}''');
  }
}
